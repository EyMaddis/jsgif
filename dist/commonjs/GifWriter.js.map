{"version":3,"sources":["GifWriter.js"],"names":["GifWriter","value","writeByte","writeUTFBytes","width","height","gctFlag","colorResolution","sortFlag","gctSize","backgroundColorIndex","pixelAspectRatio","writeShort","colorTable","writeBytes","n","length","i","disposalMethod","userInputFlag","transparentColorFlag","delayTime","transparentColorIndex","comments","comment","applicationIdentifier","applicationAuthenticationCode","dataBlocks","dataBlock","loopCount","writeApplicationExtension","leftPosition","topPosition","lctFlag","interlaceFlag","lctSize","left","top","localColorTable","tableBasedImageData","writeGraphicControlExtension","undefined","writeImageDescriptor","Math","log2","writeColorTable"],"mappings":"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","file":"GifWriter.js","sourcesContent":["import ByteArray from './ByteArray.js';\n\nexport default class GifWriter extends ByteArray {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\twriteShort(value) {\n\t\tthis.writeByte(value & 0xFF);\n\t\tthis.writeByte((value >> 8) & 0xFF);\n\t}\n\n\twriteHeader() {\n\t\t// Signature\n\t\tthis.writeUTFBytes('GIF');\n\n\t\t// Version\n\t\tthis.writeUTFBytes('89a');\n\t}\n\n\twriteLogicalScreenDescriptor(width, height, gctFlag, colorResolution, sortFlag, gctSize, backgroundColorIndex, pixelAspectRatio) {\n\t\tthis.writeShort(width); // Logical Screen Width\n\t\tthis.writeShort(height); // Logical Screen Height\n\n\t\t// Packed Fields\n\t\tthis.writeByte(\n\t\t\tgctFlag << 7 | // Global Color Table Flag (1 bit)\n\t\t\tcolorResolution << 4 | // Color Resolution (3 bits)\n\t\t\tsortFlag << 3 | // Sort Flag (1 bit)\n\t\t\tgctSize // Size of Global Color Table (3 bits)\n\t\t);\n\n\t\tthis.writeByte(backgroundColorIndex);\n\t\tthis.writeByte(pixelAspectRatio);\n\t}\n\n\twriteColorTable(colorTable) {\n\t\tthis.writeBytes(colorTable);\n\t\tvar n = (3 * 256) - colorTable.length;\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\tthis.writeByte(0);\n\t\t}\n\t}\n\n\twriteGraphicControlExtension(disposalMethod, userInputFlag, transparentColorFlag, delayTime, transparentColorIndex) {\n\t\tthis.writeByte(0x21); // Extension Introducer\n\t\tthis.writeByte(0xF9); // Graphic Control Label\n\t\tthis.writeByte(4); // Block Size\n\n\t\t// Packed Fields\n\t\tthis.writeByte(\n\t\t\t0 << 5 | // Reserved (3 bits)\n\t\t\tdisposalMethod << 2 | // Disposal Method (3 bits)\n\t\t\tuserInputFlag << 1 | // User Input Flag (1 bit)\n\t\t\ttransparentColorFlag // Transparent Color Flag (1 bit)\n\t\t);\n\n\t\tthis.writeShort(delayTime); // Delay Time\n\t\tthis.writeByte(transparentColorIndex); // Transparent Color Index\n\n\t\tthis.writeByte(0); // Block Terminator\n\t}\n\n\twriteCommentExtension(comments) {\n\t\tthis.writeByte(0x21); // Extension Introducer\n\t\tthis.writeByte(0xFE); // Comment Label\n\n\t\t// Comment Data\n\t\tfor (const comment of comments) {\n\t\t\t// Data Sub-block\n\t\t\tthis.writeByte(comment.length); // Block Size\n\t\t\tthis.writeUTFBytes(comment); // Data Values\n\t\t}\n\n\t\tthis.writeByte(0); // Block Terminator\n\t}\n\n\twriteApplicationExtension(applicationIdentifier, applicationAuthenticationCode, dataBlocks) {\n\t\tthis.writeByte(0x21); // Extension Introducer\n\t\tthis.writeByte(0xFF); // Application Extension Label\n\t\tthis.writeByte(11); // Block Size\n\n\t\tthis.writeUTFBytes(applicationIdentifier); // Application Identifier (8 bytes)\n\t\tthis.writeUTFBytes(applicationAuthenticationCode); // Application Authentication Code (3 bytes)\n\n\t\t// Application Data\n\t\tfor (const dataBlock of dataBlocks) {\n\t\t\t// Data Sub-block\n\t\t\tthis.writeByte(dataBlock.length); // Block Size\n\t\t\tthis.writeBytes(dataBlock); // Data Values\n\t\t}\n\n\t\tthis.writeByte(0); // Block Terminator\n\t}\n\n\t// http://www.vurdalakov.net/misc/gif/netscape-looping-application-extension\n\twriteNetscapeLoopingApplicationExtension(loopCount) {\n\t\tconst dataBlock = [\n\t\t\t1, // Sub-block ID\n\t\t\tloopCount & 0xFF, (loopCount >> 8) & 0xFF, // Loop Count (2 bytes)\n\t\t];\n\n\t\tthis.writeApplicationExtension(\n\t\t\t'NETSCAPE',\n\t\t\t'2.0',\n\t\t\t[dataBlock]\n\t\t);\n\t}\n\n\twriteImageDescriptor(leftPosition, topPosition, width, height, lctFlag, interlaceFlag, sortFlag, lctSize) {\n\t\tthis.writeByte(0x2C); // Image Separator\n\t\tthis.writeShort(leftPosition); // Image Left Position\n\t\tthis.writeShort(topPosition); // Image Top Position\n\t\tthis.writeShort(width); // Image Width\n\t\tthis.writeShort(height); // Image Height\n\n\t\t// Packed Fields\n\t\tthis.writeByte(\n\t\t\tlctFlag << 7 | // Local Color Table Flag (1 bit)\n\t\t\tinterlaceFlag << 6 | // Interlace Flag (1 bit)\n\t\t\tsortFlag << 5 | // Sort Flag (1 bit)\n\t\t\t0 << 3 | // Reserved (2 bits)\n\t\t\tlctSize // Size of Local Color Table (3 bits)\n\t\t);\n\t}\n\n\twriteTrailer() {\n\t\tthis.writeByte(0x3B); // GIF Trailer\n\t}\n\n\twriteImage(left, top, width, height, disposalMethod, delayTime, transparentColorIndex, localColorTable, tableBasedImageData) {\n\t\tthis.writeGraphicControlExtension(\n\t\t\tdisposalMethod,\n\t\t\t0,\n\t\t\t+(transparentColorIndex !== undefined),\n\t\t\tdelayTime,\n\t\t\t(transparentColorIndex !== undefined) ? transparentColorIndex : 0\n\t\t);\n\n\t\t// Write Image Descriptor\n\t\tthis.writeImageDescriptor(\n\t\t\tleft,\n\t\t\ttop,\n\t\t\twidth,\n\t\t\theight,\n\t\t\t+!!localColorTable,\n\t\t\t0,\n\t\t\t0,\n\t\t\tlocalColorTable ? Math.log2(localColorTable.length / 3) - 1 : 0\n\t\t);\n\n\t\t// Write Local Color Table\n\t\tthis.writeColorTable(localColorTable);\n\n\t\t// Write Table Based Image Data\n\t\tthis.writeBytes(tableBasedImageData);\n\t}\n}\n"],"sourceRoot":"/source/"}